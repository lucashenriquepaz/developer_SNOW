<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_815336_developer_dev</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Dev When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	/*var rightnow = new GlideDateTime();
	// Here we're creating a GlideDateTime object for the When needed date
	var whenNeeded = new GlideDateTime(current.u_when_needed);
	
	// Getting dates... Field date and today date
	var whenNeededDate = whenNeeded.getLocalDate();
	var today = rightnow.getLocalDate();
	
	// Field date is in the past
	var pastDate = whenNeeded.before(rightnow);
	// Field date is today
	var isToday = whenNeededDate.compareTo(today);

	//If the When needed date is before rightnow, do not write the record to the database
	// Output an error message to the screen
	
	if (isToday != 1 ){
		gs.addErrorMessage("When needed date cannot be in the past nor today!");
		current.setAbortAction(true);
	}*/
	
	var devUtils = new DevUtils();
	var isPast = devUtils.isDatePast(current.u_when_needed);
	var isToday = devUtils.isDateToday(current.u_when_needed);
	
	if(isPast == true || isToday == true) {
		gs.addErrorMessage("When needed date cannot be in the past nor today. Your request has not been saved to the database");
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-05-17 17:30:26</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>081c08d997630110ed52bfb3f153af18</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Dev When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="Developer Training App" source="x_815336_developer">e576f91597530110ed52bfb3f153afd0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Developer Training App">e576f91597530110ed52bfb3f153afd0</sys_scope>
        <sys_update_name>sys_script_081c08d997630110ed52bfb3f153af18</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-05-30 20:09:45</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=081c08d997630110ed52bfb3f153af18"/>
</record_update>
